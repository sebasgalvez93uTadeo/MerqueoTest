{"version":3,"sources":["components/header/images/iconMenu.svg","components/header/Header.jsx","components/cardState/CardState.jsx","components/cardComment/ListComment.jsx","components/cardComment/NewComment.jsx","components/socialBar/images/iconLike.svg","components/socialBar/images/iconHappy.svg","components/socialBar/images/iconInLove.svg","components/socialBar/images/iconCrying.svg","components/socialBar/images/iconSad.svg","components/socialBar/images/iconSceptic.svg","components/socialBar/SocialBar.jsx","components/cardComment/images/iconLike.svg","components/cardComment/CardComment.jsx","containers/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","id","src","iconMenu","alt","CardState","props","wrapperRef","createRef","updatePosts","callBack","state","newDataPosts","showButton","event","undefined","current","contains","target","setState","buttonShow","sendNewComment","e","preventDefault","date","Date","newPost","nextId","randomUser","name","picture","comment","JSON","parse","localStorage","getItem","newData","concat","setItem","stringify","changeText","value","placeholder","document","addEventListener","this","nextProps","removeEventListener","className","onSubmit","ref","type","onClick","onChange","maxLength","React","Component","ListComments","author","post","moment","fromNow","NewComment","newComment","filterPost","filter","commentsTemp","comments","commentsMap","reactions","reverse","map","item","commentsMapArr","Map","orderComment","values","showBox","SocialBar","sendLike","newAction","filterAction","action","actionsTempLike","like","actionsTempHappy","happy","actionsTempLove","love","actionsTempSad","sad","actionsTempCry","cry","actionsTempThink","think","reactionMap","reactionsMapArr","orderReaction","reactionApply","sendHappy","sendLove","sendCrying","sendSad","sendSceptic","Like","Happy","Love","Crying","Sad","Sceptic","CardComment","showAddComments","showComments","showSocialBar","showSocialBarF","reactionActive","index","ListComment","likesMap","slice","length","style","marginLeft","iconLike","HomePage","sendDataLocalStorage","Data","users","Math","floor","random","dataPost","Posts","data","getResponse","postsMap","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.640a1dee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iconMenu.8c4a8694.svg\";","import React from 'react';\r\n\r\nimport './styles/style.scss';\r\nimport iconMenu from './images/iconMenu.svg';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header>\r\n            <h1 id=\"titleMerqueo\">Merqueo Test</h1>\r\n            <img src={iconMenu} alt=\"icon Menu\" />\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, { createRef } from 'react';\r\nimport nextId from \"react-id-generator\";\r\n\r\nimport './styles/style.scss';\r\n\r\nclass CardState extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholder: props.placeholder,\r\n      randomUser: props.randomUser,\r\n      newDataPosts: props.newDataPosts,\r\n      buttonShow: false,\r\n      comment: '',\r\n    }\r\n  }\r\n  wrapperRef = createRef();\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.showButton);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newDataPosts !== this.props.newDataPosts) {\r\n      this.setState({\r\n        newDataPosts: nextProps.newDataPosts,\r\n      });\r\n    }\r\n  }\r\n  updatePosts = () => {\r\n    this.props.callBack(this.state.newDataPosts);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.showButton);\r\n  }\r\n  showButton = (event) => {\r\n    if(event !== undefined) {\r\n      if (this.wrapperRef.current && this.wrapperRef.current.contains(event.target)) {\r\n        this.setState({\r\n          buttonShow: true,\r\n        });\r\n      } \r\n    }\r\n  }\r\n  sendNewComment = (e) => {\r\n    e.preventDefault();\r\n    let date = new Date();\r\n    const idGen = nextId();\r\n    const newPost = {\r\n      \"id\": idGen,\r\n      \"author\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n      \"post\": this.state.comment,\r\n      \"date\": date,\r\n      \"reactions\": {\r\n        \"like\": [],\r\n        \"happy\": [],\r\n        \"love\": [],\r\n        \"sad\": [],\r\n        \"cry\": [],\r\n        \"think\": []\r\n      },\r\n      \"comments\": [\r\n      ]\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const newData = this.state.newDataPosts.concat(newPost);\r\n      localStorage.setItem('allData', JSON.stringify(newData));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n      });\r\n    });\r\n    this.setState({\r\n        buttonShow: false,\r\n        comment: ''\r\n    });\r\n  }\r\n  changeText = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`container-cardState${this.state.buttonShow ? ' transition' : '' }`} >\r\n        <form onSubmit={this.sendNewComment}>\r\n          <input\r\n            ref={this.wrapperRef}\r\n              type=\"text\"\r\n              value={this.state.comment}\r\n              className=\"addCommentInput\"\r\n              onClick={this.showButton}\r\n              onChange={this.changeText}\r\n              placeholder={this.props.placeholder}\r\n              maxLength=\"255\"\r\n          />\r\n          {this.state.buttonShow ? (\r\n            <button type=\"submit\">Publicar</button>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardState;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\n\r\nclass ListComments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      picture: props.picture,\r\n      author: props.author,\r\n      post: props.post,\r\n      date: props.date,\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <div className=\"container-cardComment__comment\">\r\n        <img className=\"container-cardComment__profileComment\" src={this.state.picture} alt=\"icon profile\" />\r\n        <div className=\"container-info\">\r\n          <h2 className=\"container-info__nameComment\">{this.state.author}</h2>\r\n          <span className=\"container-info__commentInComent\">{this.state.post}</span>\r\n          <span className=\"container-info__timeComment\">{moment(this.state.date).fromNow()}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListComments;","import React, { Fragment } from 'react';\r\nimport nextId from \"react-id-generator\";\r\n\r\nclass NewComment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      newDataPosts: props.newDataPosts,\r\n      comment: '',\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newDataPosts !== this.props.newDataPosts) {\r\n      this.setState({\r\n        newDataPosts: nextProps.newDataPosts,\r\n      });\r\n    }\r\n  }\r\n  updatePosts = () => {\r\n    this.props.callBack(this.state.newDataPosts);\r\n  }\r\n  changeText = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  }\r\n  sendNewComment = (e) => {\r\n    e.preventDefault();\r\n    let date = new Date();\r\n    const idGen = nextId();\r\n    const newComment = {\r\n      \"id\": idGen,\r\n      \"author\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n      \"post\": this.state.comment,\r\n      \"date\": date,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterPost = this.state.newDataPosts.filter(post => post.id === this.state.id);\r\n      const commentsTemp = filterPost[0].comments.concat(newComment);\r\n      const newObjectComment = [{\r\n        \"id\": filterPost[0].id,\r\n        \"author\": filterPost[0].author,\r\n        \"picture\": filterPost[0].picture,\r\n        \"post\": filterPost[0].post,\r\n        \"date\": filterPost[0].date,\r\n        \"reactions\": filterPost[0].reactions,\r\n        \"comments\": commentsTemp\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de comentarios dentro de un post\r\n      const concatData = newObjectComment.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let commentsMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var commentsMapArr = new Map(commentsMap);\r\n      let unique = [...commentsMapArr.values()];\r\n      let orderComment = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderComment));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n      });\r\n    });\r\n    this.setState({\r\n        buttonShow: false,\r\n        comment: ''\r\n    });\r\n  }\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n        <form onSubmit={this.sendNewComment}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.comment}\r\n            className=\"addCommentInput\"\r\n            onChange={this.changeText}\r\n            placeholder=\"Escribe un comentario\"\r\n            maxLength=\"255\"\r\n          />\r\n          <button type=\"submit\">Publicar</button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n  \r\n  export default NewComment;\r\n  ","export default __webpack_public_path__ + \"static/media/iconLike.f98e5632.svg\";","export default __webpack_public_path__ + \"static/media/iconHappy.8a3af9bf.svg\";","export default __webpack_public_path__ + \"static/media/iconInLove.73ed3373.svg\";","export default __webpack_public_path__ + \"static/media/iconCrying.4074efd6.svg\";","export default __webpack_public_path__ + \"static/media/iconSad.92f0048c.svg\";","export default __webpack_public_path__ + \"static/media/iconSceptic.82b88ca4.svg\";","import React from 'react';\r\nimport nextId from \"react-id-generator\";\r\n\r\nimport Like from './images/iconLike.svg'\r\nimport Happy from './images/iconHappy.svg'\r\nimport Love from './images/iconInLove.svg'\r\nimport Crying from './images/iconCrying.svg'\r\nimport Sad from './images/iconSad.svg'\r\nimport Sceptic from './images/iconSceptic.svg'\r\n\r\nimport './styles/style.scss';\r\n\r\n\r\nclass SocialBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      newDataPosts: props.newDataPosts,\r\n    }\r\n  }\r\n  sendLike = () => {\r\n    const idGen = nextId();\r\n    const newAction =  {\r\n      \"id\": idGen,\r\n      \"name\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterAction = this.state.newDataPosts.filter(action => action.id === this.props.id);\r\n      const actionsTempLike = filterAction[0].reactions.like.concat(newAction);\r\n      const actionsTempHappy = filterAction[0].reactions.happy;\r\n      const actionsTempLove = filterAction[0].reactions.love;\r\n      const actionsTempSad = filterAction[0].reactions.sad;\r\n      const actionsTempCry = filterAction[0].reactions.cry;\r\n      const actionsTempThink = filterAction[0].reactions.think;\r\n      const newObjectReaction = [{\r\n        \"id\": filterAction[0].id,\r\n        \"author\": filterAction[0].author,\r\n        \"picture\": filterAction[0].picture,\r\n        \"post\": filterAction[0].post,\r\n        \"date\": filterAction[0].date,\r\n        \"reactions\" : {\r\n          \"like\": actionsTempLike,\r\n          \"happy\": actionsTempHappy,\r\n          \"love\": actionsTempLove,\r\n          \"sad\": actionsTempSad,\r\n          \"cry\": actionsTempCry,\r\n          \"think\": actionsTempThink,\r\n        },\r\n        \"comments\": filterAction[0].comments\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de likes dentro de un post\r\n      const concatData = newObjectReaction.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let reactionMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var reactionsMapArr = new Map(reactionMap);\r\n      let unique = [...reactionsMapArr.values()];\r\n      let orderReaction = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderReaction));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n        this.props.reactionApply(true);\r\n      });\r\n    });\r\n  }\r\n  sendHappy = () => {\r\n    const idGen = nextId();\r\n    const newAction =  {\r\n      \"id\": idGen,\r\n      \"name\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterAction = this.state.newDataPosts.filter(action => action.id === this.props.id);\r\n      const actionsTempLike = filterAction[0].reactions.like;\r\n      const actionsTempHappy = filterAction[0].reactions.happy.concat(newAction);\r\n      const actionsTempLove = filterAction[0].reactions.love;\r\n      const actionsTempSad = filterAction[0].reactions.sad;\r\n      const actionsTempCry = filterAction[0].reactions.cry;\r\n      const actionsTempThink = filterAction[0].reactions.think;\r\n      const newObjectReaction = [{\r\n        \"id\": filterAction[0].id,\r\n        \"author\": filterAction[0].author,\r\n        \"picture\": filterAction[0].picture,\r\n        \"post\": filterAction[0].post,\r\n        \"date\": filterAction[0].date,\r\n        \"reactions\" : {\r\n          \"like\": actionsTempLike,\r\n          \"happy\": actionsTempHappy,\r\n          \"love\": actionsTempLove,\r\n          \"sad\": actionsTempSad,\r\n          \"cry\": actionsTempCry,\r\n          \"think\": actionsTempThink,\r\n        },\r\n        \"comments\": filterAction[0].comments\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de Happy dentro de un post\r\n      const concatData = newObjectReaction.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let reactionMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var reactionsMapArr = new Map(reactionMap);\r\n      let unique = [...reactionsMapArr.values()];\r\n      let orderReaction = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderReaction));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n      });\r\n    });\r\n  }\r\n  sendLove = () => {\r\n    const idGen = nextId();\r\n    const newAction =  {\r\n      \"id\": idGen,\r\n      \"name\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterAction = this.state.newDataPosts.filter(action => action.id === this.props.id);\r\n      const actionsTempLike = filterAction[0].reactions.like;\r\n      const actionsTempHappy = filterAction[0].reactions.happy;\r\n      const actionsTempLove = filterAction[0].reactions.love.concat(newAction);\r\n      const actionsTempSad = filterAction[0].reactions.sad;\r\n      const actionsTempCry = filterAction[0].reactions.cry;\r\n      const actionsTempThink = filterAction[0].reactions.think;\r\n      const newObjectReaction = [{\r\n        \"id\": filterAction[0].id,\r\n        \"author\": filterAction[0].author,\r\n        \"picture\": filterAction[0].picture,\r\n        \"post\": filterAction[0].post,\r\n        \"date\": filterAction[0].date,\r\n        \"reactions\" : {\r\n          \"like\": actionsTempLike,\r\n          \"happy\": actionsTempHappy,\r\n          \"love\": actionsTempLove,\r\n          \"sad\": actionsTempSad,\r\n          \"cry\": actionsTempCry,\r\n          \"think\": actionsTempThink,\r\n        },\r\n        \"comments\": filterAction[0].comments\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de Love dentro de un post\r\n      const concatData = newObjectReaction.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let reactionMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var reactionsMapArr = new Map(reactionMap);\r\n      let unique = [...reactionsMapArr.values()];\r\n      let orderReaction = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderReaction));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n        // this.props.reactionApply(true);\r\n      });\r\n    });\r\n  }\r\n  sendCrying = () => {\r\n    const idGen = nextId();\r\n    const newAction =  {\r\n      \"id\": idGen,\r\n      \"name\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterAction = this.state.newDataPosts.filter(action => action.id === this.props.id);\r\n      const actionsTempLike = filterAction[0].reactions.like;\r\n      const actionsTempHappy = filterAction[0].reactions.happy;\r\n      const actionsTempLove = filterAction[0].reactions.love;\r\n      const actionsTempSad = filterAction[0].reactions.sad.concat(newAction);\r\n      const actionsTempCry = filterAction[0].reactions.cry;\r\n      const actionsTempThink = filterAction[0].reactions.think;\r\n      \r\n      const newObjectReaction = [{\r\n        \"id\": filterAction[0].id,\r\n        \"author\": filterAction[0].author,\r\n        \"picture\": filterAction[0].picture,\r\n        \"post\": filterAction[0].post,\r\n        \"date\": filterAction[0].date,\r\n        \"reactions\" : {\r\n          \"like\": actionsTempLike,\r\n          \"happy\": actionsTempHappy,\r\n          \"love\": actionsTempLove,\r\n          \"sad\": actionsTempSad,\r\n          \"cry\": actionsTempCry,\r\n          \"think\": actionsTempThink,\r\n        },\r\n        \"comments\": filterAction[0].comments\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de likes dentro de un post\r\n      const concatData = newObjectReaction.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let reactionMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var reactionsMapArr = new Map(reactionMap);\r\n      let unique = [...reactionsMapArr.values()];\r\n      let orderReaction = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderReaction));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n      });\r\n    });\r\n  }\r\n  sendSad = () => {\r\n    const idGen = nextId();\r\n    const newAction =  {\r\n      \"id\": idGen,\r\n      \"name\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterAction = this.state.newDataPosts.filter(action => action.id === this.props.id);\r\n      const actionsTempLike = filterAction[0].reactions.like;\r\n      const actionsTempHappy = filterAction[0].reactions.happy;\r\n      const actionsTempLove = filterAction[0].reactions.love;\r\n      const actionsTempSad = filterAction[0].reactions.sad;\r\n      const actionsTempCry = filterAction[0].reactions.cry.concat(newAction);\r\n      const actionsTempThink = filterAction[0].reactions.think;\r\n      const newObjectReaction = [{\r\n        \"id\": filterAction[0].id,\r\n        \"author\": filterAction[0].author,\r\n        \"picture\": filterAction[0].picture,\r\n        \"post\": filterAction[0].post,\r\n        \"date\": filterAction[0].date,\r\n        \"reactions\" : {\r\n          \"like\": actionsTempLike,\r\n          \"happy\": actionsTempHappy,\r\n          \"love\": actionsTempLove,\r\n          \"sad\": actionsTempSad,\r\n          \"cry\": actionsTempCry,\r\n          \"think\": actionsTempThink,\r\n        },\r\n        \"comments\": filterAction[0].comments\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de Sad dentro de un post\r\n      const concatData = newObjectReaction.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let reactionMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var reactionsMapArr = new Map(reactionMap);\r\n      let unique = [...reactionsMapArr.values()];\r\n      let orderReaction = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderReaction));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n      });\r\n    });\r\n  }\r\n  sendSceptic = () => {\r\n    const idGen = nextId();\r\n    const newAction =  {\r\n      \"id\": idGen,\r\n      \"name\": this.props.randomUser.name,\r\n      \"picture\": this.props.randomUser.picture,\r\n    }\r\n    this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n      const filterAction = this.state.newDataPosts.filter(action => action.id === this.props.id);\r\n      const actionsTempLike = filterAction[0].reactions.like;\r\n      const actionsTempHappy = filterAction[0].reactions.happy;\r\n      const actionsTempLove = filterAction[0].reactions.love;\r\n      const actionsTempSad = filterAction[0].reactions.sad;\r\n      const actionsTempCry = filterAction[0].reactions.cry;\r\n      const actionsTempThink = filterAction[0].reactions.think.concat(newAction);\r\n      const newObjectReaction = [{\r\n        \"id\": filterAction[0].id,\r\n        \"author\": filterAction[0].author,\r\n        \"picture\": filterAction[0].picture,\r\n        \"post\": filterAction[0].post,\r\n        \"date\": filterAction[0].date,\r\n        \"reactions\" : {\r\n          \"like\": actionsTempLike,\r\n          \"happy\": actionsTempHappy,\r\n          \"love\": actionsTempLove,\r\n          \"sad\": actionsTempSad,\r\n          \"cry\": actionsTempCry,\r\n          \"think\": actionsTempThink,\r\n        },\r\n        \"comments\": filterAction[0].comments\r\n      }];\r\n      // Funcionalidad para actualizar el arreglo de Sceptic dentro de un post\r\n      const concatData = newObjectReaction.concat(this.state.newDataPosts);\r\n      const reverData = concatData.reverse();\r\n      let reactionMap = reverData.map(item=>{\r\n          return [item.id,item]\r\n      });\r\n      var reactionsMapArr = new Map(reactionMap);\r\n      let unique = [...reactionsMapArr.values()];\r\n      let orderReaction = unique.reverse();\r\n      localStorage.setItem('allData', JSON.stringify(orderReaction));\r\n      this.setState({ newDataPosts: JSON.parse(localStorage.getItem('allData')) }, () => {\r\n        this.updatePosts();\r\n        this.props.showBox(false);\r\n      });\r\n    });\r\n  }\r\n  updatePosts = () => {\r\n    this.props.callBack(this.state.newDataPosts);\r\n  }\r\n  render () {\r\n    return(\r\n      <div className=\"container-socialBar\">\r\n        <div>\r\n          <img onClick={this.sendLike} src={Like} alt=\"icon like\" />\r\n        </div>\r\n        <div>\r\n          <img onClick={this.sendHappy} src={Happy} alt=\"icon like\" />\r\n        </div>\r\n        <div>\r\n          <img onClick={this.sendLove} src={Love} alt=\"icon like\" />\r\n        </div>\r\n        <div>\r\n          <img onClick={this.sendCrying} src={Crying} alt=\"icon like\" />\r\n        </div>\r\n        <div>\r\n          <img onClick={this.sendSad} src={Sad} alt=\"icon like\" />\r\n        </div>\r\n        <div>\r\n          <img onClick={this.sendSceptic} src={Sceptic} alt=\"icon like\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialBar;\r\n","export default __webpack_public_path__ + \"static/media/iconLike.f98e5632.svg\";","import React, { Fragment } from 'react';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport ListComments from './ListComment';\r\nimport NewComment from './NewComment';\r\nimport SocialBar from '../socialBar/SocialBar';\r\nimport './styles/style.scss';\r\nimport iconLike from './images/iconLike.svg';\r\n\r\nclass CardComment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      picture: props.picture,\r\n      author: props.author,\r\n      date: props.date,\r\n      post: props.post,\r\n      like: props.like,\r\n      comments: props.comments,\r\n      newDataPosts: props.newDataPosts,\r\n      randomUser: props.randomUser,\r\n      showAddComments: false,\r\n      showComments: false,\r\n      showSocialBar: false,\r\n      reactionActive: false,\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newDataPosts !== this.props.newDataPosts) {\r\n      this.setState({\r\n        newDataPosts: nextProps.newDataPosts,\r\n      }, () => {\r\n        this.updatePosts();\r\n      });\r\n    }\r\n    if (nextProps.comments !== this.props.comments) {\r\n      this.setState({\r\n        comments: nextProps.comments,\r\n      }, () => {\r\n        this.updatePosts();\r\n      });\r\n    }\r\n    if (nextProps.like !== this.props.like) {\r\n      this.setState({\r\n        like: nextProps.like,\r\n      }, () => {\r\n        this.updatePosts();\r\n      });\r\n    }\r\n  }\r\n  updatePosts = () => {\r\n    this.props.callBack(this.state.newDataPosts);\r\n  }\r\n  // funcion para mostrar la caja de agregar comentarios\r\n  showAddComments = () => {\r\n    if (!this.state.showAddComments) {\r\n      this.setState({ showAddComments: true, showComments: false, showSocialBar: false });\r\n    } else {\r\n      this.setState({ showAddComments: false, showComments: false, showSocialBar: false });\r\n    }\r\n  }\r\n  // funcion para mostrar la caja de comentarios\r\n  showComments = () => {\r\n    if (!this.state.showComments) {\r\n      this.setState({ showComments: true, showAddComments: false, showSocialBar: false });\r\n    } else {\r\n      this.setState({ showComments: false, showAddComments: false, showSocialBar: false });\r\n    }\r\n  }\r\n  showSocialBarF = () => {\r\n    if (!this.state.showSocialBar) {\r\n      this.setState({ showSocialBar: true, showComments: false, showAddComments: false });\r\n    } else {\r\n      this.setState({ showSocialBar: false, showComments: false, showAddComments: false });\r\n    }\r\n  }\r\n  reactionApply = () => {\r\n    this.setState({ reactionActive: true });\r\n  }\r\n  render() {\r\n    // Recorrer el arreglo de comentarios en los comentarios\r\n    const commentsMap = this.state.comments.map((values, index) => (\r\n      <ListComments \r\n        key={index}\r\n        picture={values.picture}\r\n        author={values.author}\r\n        post={values.post}\r\n        date={values.date}\r\n      />\r\n    ));\r\n    // Recorrer el arreglo de likes para mostrar los tres primeros\r\n    if (this.state.like !== undefined) {\r\n      const threeLikes = this.state.like.slice(0, 3);\r\n      var likesMap = threeLikes.map((values, index) => (\r\n        <Fragment key={index}>\r\n          <img className=\"container-reactions__circle\" src={values.picture} alt=\"icon profile user\" />\r\n        </Fragment>\r\n      ));\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container-cardComment\">\r\n          <div className=\"container-cardComment__comment\">\r\n            <img className=\"container-cardComment__profile\" src={this.state.picture} alt=\"icon profile\" />\r\n            <div className=\"container-info\">\r\n              <h2 className=\"container-info__name\">{this.state.author}</h2>\r\n              <span className=\"container-info__time\">{moment(this.state.date).fromNow()}</span>\r\n              <span className=\"container-info__comment\">{this.state.post}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"container-reactions\">\r\n            {likesMap}\r\n            <div className=\"container-textReactions\">\r\n              {this.state.like.length !== 0 ? (<span className=\"container-reactions__interaction\">{this.state.like.length} Likes</span>) : <span style={{marginLeft: -10}} className=\"container-reactions__interaction\">No tienes likes</span>}\r\n              {this.state.comments.length !== 0 ? (\r\n                this.state.comments.length === 1 ? (\r\n                  <div onClick={this.showComments} className=\"container-reactions__interaction\">{this.state.comments.length} Comentario</div>\r\n                ): (<div onClick={this.showComments} className=\"container-reactions__interaction\">{this.state.comments.length} Comentarios</div>)\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"container-separator\"></div>\r\n          {this.state.showSocialBar ? (\r\n            <SocialBar \r\n              id={this.state.id}\r\n              newDataPosts={this.state.newDataPosts}\r\n              randomUser={this.props.randomUser}\r\n              callBack={this.props.callBack}\r\n              showBox={this.showSocialBarF}\r\n              reactionApply={this.reactionApply}\r\n            />\r\n          ) : null }\r\n          <div className=\"container-actions\">\r\n            {!this.state.reactionActive ? (\r\n              <div onClick={this.showSocialBarF} className=\"container-actions__react\">Reaccionar</div>\r\n            ) : (<div className=\"container-actions__reactActive\"><img src={iconLike} alt=\"icon like\" />Me gusta</div>) }\r\n            <div onClick={this.showAddComments} className=\"container-actions__comment\">Comentar</div>\r\n          </div>\r\n        </div>\r\n        {/* Validacion para saber cual caja mostrar (addNewComment or viewComments) */}\r\n        <div className={`container-addComment${this.state.showAddComments ? ' transition' : '' }`} >\r\n          {this.state.showAddComments ? (\r\n            <NewComment\r\n              id={this.state.id}\r\n              newDataPosts={this.state.newDataPosts}\r\n              randomUser={this.props.randomUser}\r\n              callBack={this.props.callBack}\r\n              showBox={this.showAddComments}\r\n            />\r\n            ) : null}\r\n          </div>\r\n        <div className={`container-addComment${this.state.showComments ? ' transitionShow' : '' }`} >\r\n          {this.state.showComments ? (\r\n            commentsMap\r\n          ) : null}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardComment;\r\n","import React, { Fragment } from 'react';\r\nimport Header from '../components/header/Header';\r\nimport CardState from '../components/cardState/CardState.jsx';\r\nimport CardComment from '../components/cardComment/CardComment.jsx';\r\nimport Data from '../data/users.json';\r\nimport Posts from '../data/posts.json';\r\n\r\n// Clase principal envia a App.js\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newDataPosts: [],\r\n      randomUser:[]\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.sendDataLocalStorage();\r\n  }\r\n  sendDataLocalStorage = () => {\r\n    // Seleccionar usuario de forma Random\r\n    this.setState({ randomUser: Data.users[Math.floor(Math.random()*Data.users.length)]});\r\n    const dataPost = Posts.data;\r\n    // Envio de data para el localStorage\r\n    if (localStorage.getItem('allData') === null) {\r\n      localStorage.setItem('allData', JSON.stringify(dataPost));\r\n    }\r\n    // Se trae la data del campo de localStorage actualizada\r\n    this.setState({ newDataPosts : JSON.parse(localStorage.getItem('allData'))});\r\n  }\r\n  getResponse = (newDataPosts) => {\r\n    this.setState({ newDataPosts });\r\n  }\r\n  render() {\r\n    // Recorrer arreglos iniciales\r\n    const postsMap = this.state.newDataPosts.map((values, index) => (\r\n      <CardComment\r\n        key={index}\r\n        id={values.id}\r\n        picture={values.picture}\r\n        author={values.author}\r\n        date={values.date}\r\n        post={values.post}\r\n        like={values.reactions.like}\r\n        comments={values.comments}\r\n        newDataPosts={this.state.newDataPosts}\r\n        randomUser={this.state.randomUser}\r\n        callBack={this.getResponse}\r\n      />\r\n    ));\r\n    return(\r\n      <Fragment>\r\n        <Header />\r\n        <section className=\"main-section\">\r\n          <CardState\r\n            newDataPosts={this.state.newDataPosts}\r\n            randomUser={this.state.randomUser}\r\n            callBack={this.getResponse}\r\n            placeholder={'Escribe Aquí tu estado'}\r\n          />\r\n          {postsMap}\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;","import HomePage from './containers/HomePage';\nimport './App.scss';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}